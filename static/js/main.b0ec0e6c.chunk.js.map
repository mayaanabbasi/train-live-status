{"version":3,"sources":["Components/TrainStatus/Title.js","Components/TrainStatus/Input.js","Components/TrainStatus/Display.js","Components/TrainStatus/DisplayRoutes.js","Components/Header.js","Components/TrainStatus.js","Components/TrainNumber/Title.js","Components/TrainNumber/Input.js","Components/TrainNumber/Result.js","Components/TrainNumber.js","App.js","serviceWorker.js","index.js"],"names":["Title","react_default","a","createElement","className","Input","_ref","getStations","onSubmit","method","type","name","placeholder","maxLength","required","Display","status","position","cellPadding","scharr","actarr","schdep","actdep","latemin","DisplayRoutes","getStatus","routes","trainname","loading","map","data","key","code","value","Header","react_router_dom","to","API_KEY","TrainStatus","state","undefined","trainno","date","e","preventDefault","_this","setState","target","elements","console","log","axios","get","concat","then","res","train","route","obj","station","catch","error","response","request","message","config","Date","getDate","month","getMonth","year","getFullYear","this","Components_Header","TrainStatus_Title","TrainStatus_Input","length","TrainStatus_DisplayRoutes","TrainStatus_Display","React","Component","trainNumber","Result","traininfo","i","number","TrainNumber","trains","TrainNumber_Title","TrainNumber_Input","TrainNumber_Result","App","react_router","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0ec0e6c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Title = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"title-container__title\">Train Live Status</h1>\r\n            <h3 className=\"title-container__subtitle\">Check live status of your train</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\n\r\nconst Input = ({getStations}) => {\r\n    return (\r\n        <form onSubmit={getStations} method=\"post\">\r\n            <input type=\"text\" name=\"trainno\" placeholder=\"Enter train number\" maxLength=\"5\" required></input>\r\n            <button>Search</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Display = ({status, position}) => {\r\n    if (status) {\r\n        return (\r\n            <div className=\"__info\">\r\n                <table cellPadding={\"5px;\"}>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"__key\">Scheduled Arrival</td>\r\n                            <td className=\"__value\">{status.scharr}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"__key\">Actual Arrival</td>\r\n                            <td className=\"__value\">{status.actarr}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"__key\">Scheduled Departure</td>\r\n                            <td className=\"__value\">{status.schdep}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"__key\">Actual Departure</td>\r\n                            <td className=\"__value\">{status.actdep}</td>\r\n                        </tr>\r\n                        {status.latemin === null ? \r\n                        <tr>\r\n                            <td className=\"__key\">Late by</td>\r\n                            <td className=\"__value\">No Delay</td>\r\n                        </tr>\r\n                        : <tr>\r\n                        <td className=\"__key\">Late by</td>\r\n                        <td className=\"__value\">{status.latemin} minutes</td>\r\n                        </tr>\r\n                        }\r\n                        <tr>\r\n                            <td className=\"__key\">Position</td>\r\n                            <td className=\"__value\">{position}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Display;","import React from 'react';\r\n\r\nconst DisplayRoutes = ({getStatus, routes, trainname, loading}) => {\r\n    return (\r\n        <div>\r\n            { loading && <p className=\"details\"> Loading... </p>}\r\n            { trainname && <p className=\"details\"> {trainname} </p> }\r\n            <form onSubmit={getStatus} >\r\n            <select name=\"station\"> \r\n                {routes.map(data => ( <option key={data.code} value={data.code}>{data.name}</option> ))} \r\n            </select>\r\n            <button>Get Status</button>\r\n            </form>\r\n        </div>    \r\n    );\r\n}\r\n\r\nexport default DisplayRoutes;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <NavLink to=\"/\">Train Live Status</NavLink>\r\n            <NavLink to=\"/train-number\">Train Number</NavLink>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Title  from './TrainStatus/Title';\r\nimport Input  from './TrainStatus/Input';\r\nimport Display  from './TrainStatus/Display';\r\nimport DisplayRoutes  from './TrainStatus/DisplayRoutes';\r\nimport Header from './Header';\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = 'gbimmkkm2q';\r\n\r\nclass TrainStatus extends React.Component {\r\n    state = {\r\n        routes: [],\r\n        trainname: undefined,\r\n        trainno: undefined,\r\n        loading: undefined,\r\n        position: undefined,\r\n        status: undefined,\r\n        date: undefined\r\n      };\r\n    \r\n      componentDidMount() {\r\n        var date = new Date().getDate(); \r\n        var month = new Date().getMonth() + 1; \r\n        var year = new Date().getFullYear();\r\n        this.setState({\r\n          date: date + '-' + month + '-' + year,\r\n        });\r\n      }\r\n    \r\n      getStations = (e) => {\r\n        e.preventDefault();\r\n        this.setState({loading: true, trainname: undefined})\r\n        const trainno = e.target.elements.trainno.value;\r\n        console.log(trainno);\r\n        this.setState({trainno});\r\n        axios.get(`https://api.railwayapi.com/v2/route/train/${trainno}/apikey/${API_KEY}/`).then(res => {\r\n          const trainname = res.data.train.name;\r\n          const routes = res.data.route.map( obj => obj.station);\r\n          this.setState({ routes: routes, trainname: trainname, loading:false });\r\n          console.log(this.state.trainname);\r\n        }).catch((error) => {\r\n          this.setState({loading: true});\r\n          if (error.response) {\r\n              // The request was made and the server responded with a status code\r\n              // that falls out of the range of 2xx\r\n              // console.log(error.response.data);\r\n              // console.log(error.response.status);\r\n              // console.log(error.response.headers);\r\n          } else if (error.request) {\r\n              // The request was made but no response was received\r\n              // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n              // http.ClientRequest in node.js\r\n              console.log(error.request);\r\n          } else {\r\n              // Something happened in setting up the request that triggered an Error\r\n              console.log('Error', error.message);\r\n          }\r\n          console.log(error.config);\r\n        });\r\n      }\r\n    \r\n      getStatus = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state.trainno);\r\n        const station = e.target.elements.station.value;\r\n        console.log(station);\r\n        axios.get(`https://api.railwayapi.com/v2/live/train/${this.state.trainno}/station/${station}/date/${this.state.date}/apikey/${API_KEY}/`).then(res => {\r\n          const position = res.data.position;\r\n          const status = res.data.status;\r\n          this.setState({position: position, status: status});\r\n          console.log(\"position:\",position);\r\n          console.log(\"status: \", status); \r\n        }).catch((error) => {\r\n          // Error\r\n          if (error.response) {\r\n              // The request was made and the server responded with a status code\r\n              // that falls out of the range of 2xx\r\n              // console.log(error.response.data);\r\n              // console.log(error.response.status);\r\n              // console.log(error.response.headers);\r\n          } else if (error.request) {\r\n              // The request was made but no response was received\r\n              // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n              // http.ClientRequest in node.js\r\n              console.log(error.request);\r\n          } else {\r\n              // Something happened in setting up the request that triggered an Error\r\n              console.log('Error', error.message);\r\n          }\r\n          console.log(error.config);\r\n        });\r\n      }\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"container\">\r\n                    <div className=\"row links\">\r\n                        <Header />\r\n                    </div>\r\n                    <div className=\"row section-trainstatus\">\r\n                        <div className=\"col-lg-5\">\r\n                            <Title />   \r\n                        </div>\r\n                        <div className=\"col-lg-7\">\r\n                            <Input getStations={this.getStations}/>\r\n                            {this.state.routes.length === 0 ? null : <DisplayRoutes routes={this.state.routes} getStatus={this.getStatus} trainname={this.state.trainname} loading={this.state.loading}/>}\r\n                            <div className=\"form-container\">\r\n                                <Display position={this.state.position} status={this.state.status}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrainStatus;","import React from 'react';\r\n\r\nconst Title = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"title-container__title\">Train Number</h1>\r\n            <h3 className=\"title-container__subtitle\">Get train number from train name</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\n\r\nconst Input = ({trainNumber}) => {\r\n    return ( \r\n        <form onSubmit={trainNumber} method=\"post\">\r\n            <input type=\"text\" name=\"trainname\" placeholder=\"Enter train name\" required></input>\r\n            <button>Search</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Result = ({traininfo}) => {\r\n    return (\r\n        <div className=\"__info table-wrapper-scroll-y my-custom-scrollbar form-container\">\r\n            <table cellPadding={\"5px;\"}>\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"__key\">Train name</th>\r\n                    <th className=\"__key\">Train number</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {traininfo.map(i => (\r\n                    <tr key={i.number}>\r\n                        <td className=\"__key\">{i.name}</td>\r\n                        <td className=\"__value\">{i.number}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result;","import React from 'react';\r\nimport Title from './TrainNumber/Title';\r\nimport Input from './TrainNumber/Input';\r\nimport Result from './TrainNumber/Result';\r\nimport Header from './Header';\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = 'gbimmkkm2q';\r\n\r\nclass TrainNumber extends React.Component {\r\n    state= {\r\n        traininfo:[],\r\n    }\r\n\r\n    trainNumber = (e) => {\r\n        e.preventDefault();\r\n        const trainname = e.target.elements.trainname.value;\r\n        console.log(trainname);\r\n        axios.get(`https://api.railwayapi.com/v2/suggest-train/train/${trainname}/apikey/${API_KEY}/`).then(res=>{\r\n            console.log(res.data.trains);\r\n            const traininfo = res.data.trains;\r\n            this.setState({traininfo: traininfo});\r\n        })\r\n        \r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"container\">\r\n                    <div className=\"row links\">\r\n                        <Header />\r\n                    </div>\r\n                    <div className=\"row section-trainstatus\">\r\n                        <div className=\"col-lg-5\">\r\n                            <Title />   \r\n                        </div>\r\n                        <div className=\"col-lg-7\">\r\n                            <Input trainNumber={this.trainNumber}/>\r\n                            {this.state.traininfo.length === 0 ? null : <Result traininfo={this.state.traininfo}/> }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrainNumber;","import React from 'react';\nimport TrainStatus from './Components/TrainStatus';\nimport TrainNumber from './Components/TrainNumber';\nimport {HashRouter, Switch, Route} from 'react-router-dom';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route path=\"/\" component={TrainStatus} exact />\n          <Route path=\"/train-number\" component={TrainNumber} exact />\n        </Switch>\n      </HashRouter> \n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './style.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}